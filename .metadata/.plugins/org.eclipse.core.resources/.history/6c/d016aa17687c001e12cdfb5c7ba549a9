package company.rest;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.server.ResponseStatusException;

import company.entities.PaymentMode;
import company.repositories.PaymentModeRepo;

@RestController
public class PaymentModeController {
	@Autowired // Injecting Payment Dependency
	PaymentModeRepo paymentRepo;

	// Get all Payment Details
	@GetMapping("/payments")
	public List<PaymentMode> getAllPaymentmodes() {
		return paymentRepo.findAll();
	}

	// 2
	// Add Payment
	@PostMapping("/payments/add")
	public PaymentMode addNewPaymentModes(@RequestBody PaymentMode mode) {
		try {
			var optCategory = paymentRepo.findById(mode.getPaymentCode());
			if (optCategory.isPresent()) {
				throw new ResponseStatusException(HttpStatus.BAD_REQUEST, "Payment Code Already Present");
			}
			paymentRepo.save(mode);
			return mode;
		} catch (DataAccessException ex) {
			throw new ResponseStatusException(HttpStatus.INTERNAL_SERVER_ERROR, ex.getMessage());
		}
	}

	// 2
	// Delete Payment
	@DeleteMapping("/payments/delete/{paymentCode}")
	public void deleteOneMode(@PathVariable("paymentCode") String paymentCode) {
		var optPayment = paymentRepo.findById(paymentCode);
		if (optPayment.isPresent())
			paymentRepo.deleteById(paymentCode);
		else
			throw new ResponseStatusException(HttpStatus.NOT_FOUND, "Payment code Not Found!");
	}

	// 2
	// Update Payment
	@PutMapping("/payments/update/{paymentCode}")
	public void updatePaymentMode(@PathVariable("paymentCode") String code, @RequestBody PaymentMode mode) {
		var optPayment = paymentRepo.findById(code);
		if (optPayment.isPresent()) {
			var payment = optPayment.get();
			payment.setPaymentName(mode.getPaymentName());
			payment.setRemarks(mode.getRemarks());
			paymentRepo.save(payment);
		} else
			throw new ResponseStatusException(HttpStatus.NOT_FOUND, "Course Name Not Found!");
	}
}
